{"version":3,"sources":["api.ts","Routes/Chart.tsx","Routes/Price.tsx","Routes/coin.tsx","Routes/coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","fetchPrice","coinId","Chart","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","type","series","name","map","price","close","options","theme","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisBorder","axisTicks","labels","categories","time_close","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed","Price","priceata","quotes","USD","Overview","styled","div","OverviewItem","Description","p","Container","Header","header","Title","h1","pointColor","Loading","Tabs","Tab","span","activated","textColor","Back","button","Coin","useParams","state","useLocation","chartMatch","useMatch","priceMatch","fetchInfoData","infoLoading","infoData","priceLoading","loadingNow","Helmet","to","rank","symbol","description","total_supply","max_supply","path","element","Contents","ul","CoinInfo","li","props","bgColor","Img","img","Coins","rel","href","slice","coin","id","src","toLowerCase","Router","lightTheme","GlobalStyle","createGlobalStyle","ChangeTheme","App","useState","themeNow","themeNext","onClick","queryClient","QueryClient","ReactDOM","render","client","initialIsOpen","document","getElementById"],"mappings":"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","file":"static/js/main.8b15de7e.chunk.js","sourcesContent":["const BASE_URL = \"https://api.coinpaprika.com/v1\";\r\n\r\nexport function fetchCoins() {\r\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\r\n}\r\n\r\nexport function fetchInfoData(coinId: string) {\r\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchPrice(coinId: string) {\r\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinHistory(coinId: string) {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\r\n  return fetch(\r\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n  ).then((response) => response.json());\r\n}\r\n","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\n\r\ninterface ChartProps {\r\n  coinId: string;\r\n}\r\n\r\ninterface IHistorical {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\n\r\nfunction Chart({ coinId }: ChartProps) {\r\n  const { isLoading, data } = useQuery<IHistorical[]>(\r\n    [\"ohlcv\", coinId],\r\n    () => fetchCoinHistory(coinId),\r\n    {\r\n      refetchInterval: 10000,\r\n    }\r\n  );\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading chart...\"\r\n      ) : (\r\n        <ApexChart\r\n          type=\"line\"\r\n          series={[\r\n            {\r\n              name: \"Price\",\r\n              data: data?.map((price) => price.close),\r\n            },\r\n          ]}\r\n          options={{\r\n            theme: {\r\n              mode: \"dark\",\r\n            },\r\n            chart: {\r\n              height: 300,\r\n              width: 500,\r\n              toolbar: {\r\n                show: false,\r\n              },\r\n              background: \"transparent\",\r\n            },\r\n            grid: { show: false },\r\n            stroke: {\r\n              curve: \"smooth\",\r\n              width: 4,\r\n            },\r\n            yaxis: {\r\n              show: false,\r\n            },\r\n            xaxis: {\r\n              axisBorder: { show: false },\r\n              axisTicks: { show: false },\r\n              labels: { show: false },\r\n              type: \"datetime\",\r\n              categories: data?.map((price) => price.time_close),\r\n            },\r\n            fill: {\r\n              type: \"gradient\",\r\n              gradient: { gradientToColors: [\"#0be881\"], stops: [0, 100] },\r\n            },\r\n            colors: [\"#0fbcf9\"],\r\n            tooltip: {\r\n              y: {\r\n                formatter: (value) => `$${value.toFixed(2)}`,\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import { useQuery } from \"react-query\";\r\nimport { fetchPrice } from \"../api\";\r\n\r\ninterface ChartProps {\r\n  coinId: string;\r\n}\r\n\r\ninterface IPriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\nfunction Price({ coinId }: ChartProps) {\r\n  const { isLoading: priceLoading, data: priceata } = useQuery<IPriceData>(\r\n    [\"price\", coinId],\r\n    () => fetchPrice(coinId),\r\n    {\r\n      refetchInterval: 5000,\r\n    }\r\n  );\r\n  return <div>{priceata?.quotes.USD.price}</div>;\r\n}\r\n\r\nexport default Price;\r\n","import styled from \"styled-components\";\r\nimport { Route, Routes, useLocation, useMatch, useParams } from \"react-router\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Chart from \"./Chart\";\r\nimport Price from \"./Price\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useQuery } from \"react-query\";\r\nimport { fetchInfoData, fetchPrice } from \"../api\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst Description = styled.p`\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\nconst Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  font-weight: 600;\r\n  color: ${(p) => p.theme.pointColor};\r\n`;\r\n\r\nconst Loading = styled.div``;\r\n\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Tab = styled.span<{ activated: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  color: ${(p) => (p.activated ? p.theme.pointColor : p.theme.textColor)};\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst Back = styled.button``;\r\n\r\ninterface ILocation {\r\n  state: {\r\n    name: string;\r\n  };\r\n}\r\n\r\ninterface RouteParams {\r\n  coinId: string;\r\n}\r\n\r\ninterface IInfoDate {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  contract: string;\r\n  platform: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\n\r\ninterface IPriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\nfunction Coin() {\r\n  const { coinId } = useParams() as RouteParams;\r\n\r\n  const { state } = useLocation() as ILocation;\r\n\r\n  const chartMatch = useMatch(\"/:coinId/chart\");\r\n  const priceMatch = useMatch(\"/:coinId/price\");\r\n\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<IInfoDate>(\r\n    [\"info\", coinId],\r\n    () => fetchInfoData(coinId)\r\n  );\r\n\r\n  const { isLoading: priceLoading, data: priceata } = useQuery<IPriceData>(\r\n    [\"price\", coinId],\r\n    () => fetchPrice(coinId),\r\n    {\r\n      refetchInterval: 5000,\r\n    }\r\n  );\r\n\r\n  const loadingNow = infoLoading || priceLoading;\r\n\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {state?.name\r\n            ? state.name\r\n            : loadingNow\r\n            ? \"Loading...\"\r\n            : infoData?.name}\r\n        </title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>\r\n          {state?.name\r\n            ? state.name\r\n            : loadingNow\r\n            ? \"Loading...\"\r\n            : infoData?.name}\r\n        </Title>\r\n      </Header>{\" \"}\r\n      <Back>\r\n        <Link to={`/`}>Back to Home</Link>{\" \"}\r\n      </Back>\r\n      {loadingNow ? (\r\n        <Loading>Loading...</Loading>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>${infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Price:</span>\r\n              <span>${priceata?.quotes.USD.price.toFixed(3)}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Suply:</span>\r\n              <span>{priceata?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{priceata?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n\r\n          <Tabs>\r\n            <Tab activated={chartMatch !== null}>\r\n              <Link to={`/${coinId}/chart`}>Chart</Link>\r\n            </Tab>\r\n            <Tab activated={priceMatch !== null}>\r\n              <Link to={`/${coinId}/price`}>Price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n\r\n          <Routes>\r\n            <Route path=\"chart\" element={<Chart coinId={coinId} />} />\r\n            <Route path=\"price\" element={<Price coinId={coinId} />} />\r\n          </Routes>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coin;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoins } from \"../api\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\nconst Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  font-weight: 600;\r\n  color: ${(p) => p.theme.pointColor};\r\n`;\r\n\r\nconst Contents = styled.ul``;\r\nconst CoinInfo = styled.li`\r\n  background-color: ${(p) => p.theme.textColor};\r\n  color: ${(props) => props.theme.bgColor};\r\n  border-radius: 15px;\r\n  margin-bottom: 10px;\r\n  a {\r\n    display: flex;\r\n    padding: 20px;\r\n    transition: color 0.2s ease-in;\r\n    align-items: center;\r\n  }\r\n  &:hover {\r\n    a {\r\n      color: ${(props) => props.theme.pointColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Loading = styled.div``;\r\n\r\nconst Img = styled.img`\r\n  height: 25px;\r\n  margin-right: 10px;\r\n`;\r\n\r\ninterface CoinInterface {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\n\r\nfunction Coins() {\r\n  const { isLoading, data } = useQuery<CoinInterface[]>(\"allCoins\", fetchCoins);\r\n\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>코인</title>\r\n        <link rel=\"favicon\" href=\"\" />\r\n      </Helmet>\r\n      <Header>\r\n        <Title>코인</Title>\r\n      </Header>\r\n      {isLoading ? (\r\n        <Loading>Loading...</Loading>\r\n      ) : (\r\n        <Contents>\r\n          {data?.slice(0, 100).map((coin) => (\r\n            <CoinInfo key={coin.id}>\r\n              <Link to={`/${coin.id}`} state={{ name: coin.name }}>\r\n                <Img\r\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                />\r\n                {coin.name} &rarr;\r\n              </Link>\r\n            </CoinInfo>\r\n          ))}\r\n        </Contents>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coins;\r\n","import { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport Coin from \"./Routes/coin\";\r\nimport Coins from \"./Routes/coins\";\r\n\r\n\r\nfunction Router() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Coins />} />\r\n                <Route path=\"/:coinId/*\" element={<Coin />} />\r\n            </Routes>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Router","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const theme: DefaultTheme = {\r\n  bgColor: \"#2f3640\",\r\n  textColor: \"#f5f6fa\",\r\n  pointColor: \"#9c88ff\",\r\n};\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  bgColor: \"#f5f6fa\",\r\n  textColor: \"#2f3640\",\r\n  pointColor: \"#9c88ff\",\r\n};\r\n","import { useState } from \"react\";\r\nimport styled, { createGlobalStyle, ThemeProvider } from \"styled-components\";\r\nimport Router from \"./Router\";\r\nimport { lightTheme, theme } from \"./theme\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300&display=swap');\r\n  /* http://meyerweb.com/eric/tools/css/reset/ \r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\r\n\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n*{\r\n  box-sizing: border-box;\r\n}\r\nbody{  \r\n  font-weight: 300;\r\n  font-family: 'Roboto Mono', monospace;\r\n  background-color: ${(p) => p.theme.bgColor};\r\n  color: ${(p) => p.theme.textColor};\r\n  line-height: 1.2;\r\n}\r\na{\r\n  text-decoration: none;\r\n  color:inherit;\r\n}\r\n`;\r\n\r\nconst ChangeTheme = styled.button``;\r\n\r\nfunction App() {\r\n  const [themeNow, themeNext] = useState(theme);\r\n  const changeTheme = () => {\r\n    if (themeNow === theme) {\r\n      themeNext(lightTheme);\r\n    } else {\r\n      themeNext(theme);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ChangeTheme onClick={changeTheme}>Change Theme</ChangeTheme>\r\n      <ThemeProvider theme={themeNow}>\r\n        <GlobalStyle />\r\n        <Router />\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport styled, { ThemeProvider } from \"styled-components\";\r\nimport App from \"./App\";\r\nimport { lightTheme, theme } from \"./theme\";\r\nimport { ReactQueryDevtools } from \"react-query/devtools\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nReactDOM.render(\r\n  <QueryClientProvider client={queryClient}>\r\n    <App />\r\n    <ReactQueryDevtools initialIsOpen={true} />\r\n  </QueryClientProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}